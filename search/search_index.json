{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to Chen Mengzhuo's Site!</p>"},{"location":"about/","title":"About","text":""},{"location":"about/#education-experiences","title":"Education Experiences","text":"Institution Major Degree Duration Sichuan University Computer Science and Technology Bachelor 2019~2023 Institute of Software, Chinese Academy of Sciences Software Engineering Postgraduate 2023~2026(Expected)"},{"location":"about/#current-research-interest","title":"Current Research Interest","text":"<p>Large Language Models</p>"},{"location":"about/#contact","title":"Contact","text":"<ul> <li>Github: IcyFeather233</li> <li>Email: mengzhuo.happy@gmail.com</li> </ul>"},{"location":"Tutorial/MkDocs/","title":"MkDocs","text":""},{"location":"Tutorial/MkDocs/#installation","title":"Installation","text":"<p>Run <code>pip install mkdocs</code> to install.</p> <p>Check if installed:</p> <p><code>mkdocs --version</code></p>"},{"location":"Tutorial/MkDocs/#quick-start","title":"Quick Start","text":""},{"location":"Tutorial/MkDocs/#local-work","title":"Local Work","text":"<p>Change directory to your workspace, and run <code>mkdocs new dir_name</code> to init a mkdocs dir.</p> <p>Serve on localhost: <code>mkdocs serve</code></p> <p>Build sites: <code>mkdocs build</code></p>"},{"location":"Tutorial/MkDocs/#remote-work","title":"Remote Work","text":"<p>First, create a repo on Github manually.</p> <p>Then run as follows:</p> <pre><code>git init\ngit remote add origin https://github.com/your_username/your_repo.git\n# run in your mkdocs dir, this will automatically run git push to gh-pages branch\nmkdocs gh-deploy\n</code></pre> <p>Don't forget to set your repo githubpage:</p> <p>Settings-Pages-Source(Deploy from a branch)-Branch(gh-pages, /(root))</p>"},{"location":"Tutorial/MkDocs/#update","title":"Update","text":"<p>Github Page:</p> <pre><code>mkdocs build\nmkdocs gh-deploy\n</code></pre> <p>Source code:</p> <pre><code>git add .\ngit commit -m \"change xxx\"\ngit push --set-upstream origin source\n</code></pre>"},{"location":"Tutorial/MkDocs/#references","title":"References","text":"<ul> <li>Material for MkDocs(Official)</li> <li>so easy\uff01\u4ece\u5934\u6559\u4f60\u7528mkdocs\u6784\u5efa\u4e2a\u4eba\u535a\u5ba2\u7cfb\u7edf~</li> </ul> <p>Thanks Above</p>"},{"location":"Tutorial/MiniTorch/Info/","title":"MiniTorch Info","text":"<p>MiniTorch \u662f\u4e00\u4e2a\u9762\u5411\u5e0c\u671b\u4e86\u89e3\u6df1\u5ea6\u5b66\u4e60\u7cfb\u7edf\u5185\u90e8\u6982\u5ff5\u7684\u673a\u5668\u5b66\u4e60\u5de5\u7a0b\u5e08\u7684 DIY \u6559\u5b66\u5e93\u3002\u5b83\u662f Torch API \u7684\u7eaf Python \u91cd\u65b0\u5b9e\u73b0\uff0c\u65e8\u5728\u7b80\u5355\u3001\u6613\u8bfb\u3001\u7ecf\u8fc7\u6d4b\u8bd5\u4e14\u589e\u91cf\u7684\u3002\u6700\u7ec8\u7684\u5e93\u53ef\u4ee5\u8fd0\u884c Torch \u4ee3\u7801\u3002</p> <p>\u8be5\u8bfe\u7a0b\u7684\u4e3b\u8981\u4ed3\u5e93\u53ef\u5728 GitHub \u4e0a\u627e\u5230\u3002\u4e3a\u4e86\u5b8c\u6210\u4efb\u52a1\uff0c\u4f60\u9700\u8981\u586b\u5199 TODO \u58f0\u660e\u5e76\u901a\u8fc7\u5305\u542b\u7684\u5355\u5143\u6d4b\u8bd5\u5957\u4ef6\u3002\u6b64\u5916\uff0c\u8fd8\u6709\u989d\u5916\u7684\u53ef\u89c6\u5316\u5de5\u5177\u6765\u8ffd\u8e2a\u4f60\u7684\u8fdb\u5ea6\u3002</p> <pre><code>class ReLU(ScalarFunction):\n\n    @staticmethod\n    def forward(ctx, a):\n        # TODO: Implement for Task 1.2.\n        raise NotImplementedError('Need to implement for Task 1.2')\n\n    @staticmethod\n    def backward(ctx, d_output):\n        # TODO: Implement for Task 1.4.\n        raise NotImplementedError('Need to implement for Task 1.4')\n</code></pre> <p>\u6700\u65b0\u7684\u539f\u59cb\u7684\u6587\u6863\u5728 minitorch docs \u8fd9\u91cc\u53ef\u4ee5\u627e\u5230</p> <p>\u53e6\u5916\u8fd8\u6709\u4e00\u4efd 2021 \u5e74\u7248\u672c\u7684\u6587\u6863\u5728 minitorch 2021 docs \u53ef\u4ee5\u770b\u5230</p>"},{"location":"Tutorial/MiniTorch/Setup/","title":"MiniTorch Setup","text":""},{"location":"Tutorial/MiniTorch/Setup/#_1","title":"\u73af\u5883\u8981\u6c42","text":"<p>\u521b\u5efa\u4e00\u4e2a\u865a\u62df\u73af\u5883\uff0c\u8981\u6c42Python 3.8 ~ 3.11</p>"},{"location":"Tutorial/MiniTorch/Setup/#module","title":"\u521b\u5efa\u5355\u4e2a Module \u4e2a\u4eba\u4ed3\u5e93","text":"<p>\u70b9\u51fb\u4e0b\u9762\u7684\u94fe\u63a5\u6765\u521b\u5efa\u5355\u4e2a\u7684 Module \u4e2a\u4eba\u4ed3\u5e93</p> <p>\u521b\u5efa\u4e4b\u540e git clone \u5230\u672c\u5730\u5373\u53ef</p>"},{"location":"Tutorial/MiniTorch/Setup/#_2","title":"\u5b89\u88c5\u4f9d\u8d56","text":"<pre><code>python -m pip install -r requirements.txt\npython -m pip install -r requirements.extra.txt\npython -m pip install -Ue .\n</code></pre> <code>requirements.txt</code> \u548c <code>requirements.extra.txt</code> <p>minitorch \u5df2\u7ecf\u662f\u6bd4\u8f83\u8001\u7684\u9879\u76ee\u4e86\uff0c\u6309\u7167\u539f\u4ed3\u5e93\u91cc\u9762\u7684\u914d\u7f6e\u53ef\u80fd\u4f1a\u540e\u7eed\u51fa\u9519\u3002</p> <p>\u5efa\u8bae\u628a\u8fd9\u4e24\u4e2a\u6587\u4ef6\u91cc\u9762\u7684\u5305\u7248\u672c\u53f7\u90fd\u5220\u6389\uff0c\u7136\u540e\u628a <code>requirements.extra.txt</code> \u91cc\u9762\u7684 <code>torch</code> \u79fb\u52a8\u5230 <code>requirements.txt</code> \u91cc\u9762\u6700\u524d\u9762\uff0c\u8fd9\u6837\u540e\u9762\u7684\u90a3\u4e9b\u5305\u53ef\u4ee5\u81ea\u9002\u5e94 <code>torch</code> \u7684\u7248\u672c</p> <p>\u5efa\u8bae Python \u7248\u672c\uff1a3.9</p> requirements.txt<pre><code>torch\ncolorama\nhypothesis\nmypy\nnumba\nnumpy\npre-commit\npytest\npytest-env\npytest-runner\ntyping_extensions\n</code></pre> requirements.extra.txt<pre><code>datasets\nembeddings\nnetworkx\nplotly\npydot\npython-mnist\nstreamlit\nstreamlit-ace\nwatchdog\n</code></pre> <p>\u5982\u679c\u662f\u4f7f\u7528\u7684 conda\uff0c\u8fd8\u9700\u8981\uff1a<code>conda install llvmlite</code></p>"},{"location":"Tutorial/MiniTorch/Setup/#_3","title":"\u6d4b\u8bd5","text":"<p>\u8fdb\u5165 python \u73af\u5883\u7136\u540e\u8fd0\u884c\uff1a</p> <pre><code>import minitorch\n</code></pre> <p>\u6d4b\u8bd5\u662f\u5426\u6210\u529f</p>"},{"location":"Tutorial/MiniTorch/Task0/","title":"MiniTorch Task-0 Fundamentals","text":"<p>Task0 \u7684\u90e8\u5206\u5c31\u662f\u7167\u7740\u539f\u6587\u6863\u7684\u8fd9\u4e2a\u90e8\u5206\u505a\uff1amodule0</p>"},{"location":"Tutorial/MiniTorch/Task0/#_1","title":"\u5982\u4f55\u6b63\u786e\u7684\u9605\u8bfb\u8fd9\u4efd\u6587\u6863\uff1f","text":"<p>\u9996\u5148\uff0c\u5e94\u8be5\u628a\u8be5\u9875\u9762\u4e0a\u7684 Contributing \u770b\u4e86\uff0c\u5b66\u4f1a\u4f7f\u7528 <code>pytest</code> \u5728\u5de5\u7a0b\u4e2d\u8fdb\u884c\u6d4b\u8bd5</p> <p>\u7136\u540e\u6211\u4eec\u4f1a\u53d1\u73b0\u62a5\u4e86\u5f88\u591a\u7684 <code>NotImplementedError</code>\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u4e2a\u7684\u628a\u5de5\u7a0b\u91cc\u9762\u7684\u4ee3\u7801\u8865\u5168\uff0c\u76f4\u5230\u6700\u540e\u8fd0\u884c <code>pytest</code> \u4e0d\u51fa\u9519</p>"},{"location":"Tutorial/MiniTorch/Task0/#task01-operators","title":"Task0.1 Operators","text":"<p>todo</p> <p>\u5b8c\u6210 <code>minitorch/operators.py</code> \u4e2d\u6807\u8bb0\u4e3a <code>task0_1</code> \u7684\u6d4b\u8bd5\u51fd\u6570\u3002</p> <p>\u6211\u4eec\u4e0d\u8981\u7740\u6025\u5f00\u59cb\u5199\uff0c\u5148\u628a operator \u57fa\u7840\u77e5\u8bc6 \u4ed4\u7ec6\u9605\u8bfb\u4e00\u904d\uff0c\u4e86\u89e3 <code>operators.py</code> \u5b9e\u73b0\u65b9\u9762\u7684\u6570\u5b66\u57fa\u7840</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u6709 <code>minitorch.operators.sigmoid(x: float) -&gt; float</code> \u8fd9\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e3a\u4e86\u7a33\u5b9a\u6027\uff0c\u5728\u5927\u4e8e\u96f6\u548c\u5c0f\u4e8e\u96f6\u7684\u65f6\u5019\u8ba1\u7b97\u516c\u5f0f\u4f1a\u53d1\u751f\u53d8\u5316</p>"},{"location":"Tutorial/MiniTorch/Task0/#task02-testing-and-debugging","title":"Task0.2 Testing and Debugging","text":"<p>\u6211\u4eec\u8981\u6c42\u60a8\u4e3aTask0.1\u4e2d\u7684\u8fd0\u7b97\u7b26\u5b9e\u73b0\u5c5e\u6027\u6d4b\u8bd5\u3002\u8fd9\u4e9b\u6d4b\u8bd5\u5e94\u786e\u4fdd\u60a8\u7684\u51fd\u6570\u4e0d\u4ec5\u80fd\u5de5\u4f5c\uff0c\u800c\u4e14\u8fd8\u8981\u9075\u5faa\u4efb\u4f55\u8f93\u5165\u7684\u9ad8\u7ea7\u6570\u5b66\u5c5e\u6027\u3002\u8bf7\u6ce8\u610f\uff0c\u60a8\u9700\u8981\u66f4\u6539\u8fd9\u4e9b\u6d4b\u8bd5\u51fd\u6570\u7684\u53c2\u6570\u3002</p> <p>todo</p> <p>\u5b8c\u6210 <code>test/test_operators.py</code> \u4e2d\u6807\u8bb0\u4e3a <code>task0_2</code> \u7684\u6d4b\u8bd5\u51fd\u6570\u3002</p>"},{"location":"Tutorial/MiniTorch/Task0/#task03-functional-python","title":"Task0.3 Functional Python","text":"<p>\u4e3a\u4e86\u7ec3\u4e60\u5728Python\u4e2d\u4f7f\u7528\u9ad8\u9636\u51fd\u6570\uff0c\u5b9e\u73b0\u4e09\u4e2a\u57fa\u672c\u7684\u51fd\u6570\u5f0f\u6982\u5ff5\u3002\u5c06\u5b83\u4eec\u4e0eTask 0.1\u4e2d\u63cf\u8ff0\u7684\u8fd0\u7b97\u7b26\u7ed3\u5408\u4f7f\u7528\uff0c\u4ee5\u6784\u5efa\u5728\u5217\u8868\u4e0a\u800c\u975e\u5355\u4e2a\u503c\u4e0a\u8fd0\u4f5c\u7684\u66f4\u590d\u6742\u7684\u6570\u5b66\u8fd0\u7b97\u3002</p> <p>todo</p> <p>\u5b8c\u6210 <code>minitorch/operators.py</code> \u4e2d\u6807\u8bb0\u4e3a <code>task0_3</code> \u7684\u6d4b\u8bd5\u51fd\u6570\u3002</p> <p>minitorch.operators.map(fn: Callable[[float], float]) -&gt; Callable[[Iterable[float]], Iterable[float]]</p> <p>\u53c2\u6570\uff1a</p> <ul> <li>fn\uff1a\u4e00\u4e2a\u4ece\u4e00\u4e2a\u503c\u6620\u5c04\u5230\u4e00\u4e2a\u503c\u7684\u51fd\u6570\u3002</li> </ul> <p>\u8fd4\u56de\uff1a</p> <ul> <li>\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u5217\u8868\uff0c\u5c06<code>fn</code>\u5e94\u7528\u4e8e\u6bcf\u4e2a\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5217\u8868\u3002</li> </ul> Example <pre><code>def map(fn: Callable[[float], float]) -&gt; Callable[[Iterable[float]], Iterable[float]]:\n    \"\"\"\n    Higher-order map.\n\n    See https://en.wikipedia.org/wiki/Map_(higher-order_function)\n\n    Args:\n        fn: Function from one value to one value.\n\n    Returns:\n        A function that takes a list, applies `fn` to each element, and returns a\n        new list\n    \"\"\"\n\n    def process(lst):\n        ans = []\n        for e in lst:\n            ans.append(fn(e))\n        return ans\n\n    return process\n</code></pre> <p>minitorch.operators.negList(ls: Iterable[float]) -&gt; Iterable[float]</p> <p>\u4f7f\u7528 <code>map</code> \u548c <code>neg</code> \u6765\u5bf9 <code>ls</code> \u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u53d6\u53cd</p> Example <pre><code>def negList(ls: Iterable[float]) -&gt; Iterable[float]:\n    \"Use `map` and `neg` to negate each element in `ls`\"\n    return map(neg)(ls)\n</code></pre> <p>minitorch.operators.zipWith(fn: Callable[[float, float], float]) -&gt; Callable[[Iterable[float], Iterable[float]], Iterable[float]]</p> <p>\u53c2\u6570\uff1a</p> <ul> <li>fn: \u5408\u5e76\u4e24\u4e2a\u503c</li> </ul> <p>\u8fd4\u56de\uff1a</p> <ul> <li>\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u63a5\u53d7\u4e24\u4e2a\u5927\u5c0f\u76f8\u7b49\u7684\u5217\u8868 <code>ls1</code> \u548c <code>ls2</code>\uff0c\u901a\u8fc7\u5bf9\u6bcf\u4e00\u5bf9\u5143\u7d20\u5e94\u7528 fn(x, y)\uff0c\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u5217\u8868\u3002</li> </ul> Example <pre><code>def zipWith(\n    fn: Callable[[float, float], float]\n) -&gt; Callable[[Iterable[float], Iterable[float]], Iterable[float]]:\n    \"\"\"\n    Higher-order zipwith (or map2).\n\n    See https://en.wikipedia.org/wiki/Map_(higher-order_function)\n\n    Args:\n        fn: combine two values\n\n    Returns:\n        Function that takes two equally sized lists `ls1` and `ls2`, produce a new list by\n        applying fn(x, y) on each pair of elements.\n\n    \"\"\"\n\n    def process(ls1, ls2):\n        new_list = []\n        for x, y in zip(ls1, ls2):\n            new_list.append(fn(x, y))\n        return new_list\n\n    return process\n</code></pre> <p>minitorch.operators.addLists(ls1: Iterable[float], ls2: Iterable[float]) -&gt; Iterable[float]</p> <p>\u4f7f\u7528 <code>zipWith</code> \u548c <code>add</code> \u5c06 <code>ls1</code> \u548c <code>ls2</code> \u7684\u5143\u7d20\u76f8\u52a0\u3002</p> Example <pre><code>def addLists(ls1: Iterable[float], ls2: Iterable[float]) -&gt; Iterable[float]:\n    \"Add the elements of `ls1` and `ls2` using `zipWith` and `add`\"\n    return zipWith(add)(ls1, ls2)\n</code></pre> <p>minitorch.operators.reduce(fn: Callable[[float, float], float], start: float) -&gt; Callable[[Iterable[float]], float]</p> <p>\u53c2\u6570\uff1a</p> <ul> <li>fn: \u5408\u5e76\u4e24\u4e2a\u503c</li> <li>start: \u8d77\u59cb\u503c x_0</li> </ul> <p>\u8fd4\u56de\uff1a</p> <ul> <li>\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u63a5\u53d7\u5143\u7d20\u5217\u8868 x_1 ... x_n \u5e76\u4ee5\u8fd9\u6837\u7684\u5f62\u5f0f\u8ba1\u7b97\uff1a <code>fn(x_3, fn(x_2, fn(x_1, x_0)))</code>\uff0c\u8fd9\u79cd\u64cd\u4f5c\u53eb\u505a reduction\u3002</li> </ul> Example <pre><code>def reduce(\n    fn: Callable[[float, float], float], start: float\n) -&gt; Callable[[Iterable[float]], float]:\n    r\"\"\"\n    Higher-order reduce.\n\n    Args:\n        fn: combine two values\n        start: start value $x_0$\n\n    Returns:\n        Function that takes a list `ls` of elements\n        $x_1 \\ldots x_n$ and computes the reduction :math:`fn(x_3, fn(x_2,\n        fn(x_1, x_0)))`\n    \"\"\"\n\n    def process(lst):\n        res = start\n        for el in lst:\n            res = fn(el, res)\n        return res\n\n    return process\n</code></pre> <p>minitorch.operators.sum(ls: Iterable[float]) -&gt; float</p> <p>\u4f7f\u7528 <code>reduce</code> \u548c <code>add</code> \u5bf9\u5217\u8868\u8fdb\u884c\u6c42\u548c\u3002</p> Example <pre><code>def sum(ls: Iterable[float]) -&gt; float:\n    \"Sum up a list using `reduce` and `add`.\"\n    return reduce(add, 0)(ls)\n</code></pre> <p>minitorch.operators.prod(ls: Iterable[float]) -&gt; float</p> <p>\u4f7f\u7528 <code>reduce</code> \u548c <code>mul</code> \u8ba1\u7b97\u5217\u8868\u7684\u4e58\u79ef\u3002</p> Example <pre><code>def prod(ls: Iterable[float]) -&gt; float:\n    \"Product of a list using `reduce` and `mul`.\"\n    return reduce(mul, 1)(ls)\n</code></pre>"},{"location":"Tutorial/MiniTorch/Task0/#task04-modules","title":"Task0.4 Modules","text":"<p>\u8fd9\u4e2a\u4efb\u52a1\u662f\u8981\u5b9e\u73b0 :class:<code>minitorch.Module</code> \u7c7b\u7684\u6838\u5fc3\u7ed3\u6784\u3002\u6211\u4eec\u8981\u6c42\u4f60\u5b9e\u73b0\u4e00\u4e2a\u6811\u5f62\u6570\u636e\u7ed3\u6784\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e0a\u90fd\u5b58\u50a8\u6709\u547d\u540d\u7684 :class:<code>minitorch.Parameter</code>\u3002\u8fd9\u6837\u7684\u6570\u636e\u7ed3\u6784\u4f7f\u7528\u6237\u80fd\u591f\u65b9\u4fbf\u5730\u521b\u5efa\u6811\uff0c\u4ee5\u4fbf\u904d\u5386\u627e\u5230\u6240\u6709\u611f\u5174\u8da3\u7684\u53c2\u6570\u3002</p> <p>Tip</p> <p>\u53ef\u4ee5\u8fdb\u5165 <code>project</code> \u76ee\u5f55\u8fd0\u884c <code>streamlit run app.py -- 0</code> \u4e2d\u4f7f\u7528 <code>Module Sandbox</code> \u90e8\u5206\u6765\u6d4b\u8bd5\u7cfb\u7edf</p> <p>todo</p> <p>\u5b8c\u6210 <code>minitorch/module.py</code> \u4e2d\u6807\u8bb0\u4e3a <code>task0_4</code> \u7684\u6d4b\u8bd5\u51fd\u6570\u3002</p> <p>\u7c7b\u7684\u9b54\u6cd5\u5c5e\u6027\u548c\u9b54\u6cd5\u65b9\u6cd5</p> <ul> <li>\u5f53\u521b\u5efa\u5bf9\u8c61\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u8c03\u7528 <code>__init__</code> \u9b54\u6cd5\u65b9\u6cd5\uff0c\u7ed9\u5bf9\u8c61\u6dfb\u52a0\u6210\u5458\u53d8\u91cf\u53ca\u7ed9\u8bbe\u7f6e\u521d\u59cb\u503c\uff08\u6ce8\u610f\u4e0d\u662f\u7c7b\u53d8\u91cf\uff0c\u6240\u6709\u7684\u5b9e\u4f8b\u5171\u4eab\u540c\u4e00\u4e2a\u7c7b\u53d8\u91cf\uff09\u3002</li> <li>\u7528\u4e8e\u67e5\u770b\u5bf9\u8c61\u7684\u5c5e\u6027\u4fe1\u606f\uff0c\u4f7f\u7528\u9b54\u6cd5\u5c5e\u6027 <code>__dict__</code>\uff0c<code>\u5b9e\u4f8b.__dict__</code> \u6216 <code>\u7c7b.__dict__</code>\uff0c\u8fd4\u56de\u5b57\u5178\u5f62\u5f0f\u7684\u5c5e\u6027\u4fe1\u606f</li> <li>\u5f53\u4f7f\u7528 <code>print</code> \u51fd\u6570\u76f4\u63a5\u6253\u5370\u5f53\u524d obj \u7684\u65f6\u5019\uff0c\u81ea\u52a8\u8c03\u7528 <code>__str__</code> \u9b54\u6cd5\u65b9\u6cd5\uff0c\u6253\u5370\u5b57\u7b26\u4e32\u3002</li> <li>\u6ca1\u6709 <code>__str__</code> \u65f6\uff0c\u7c7b\u7684 <code>__repr__</code> \u65b9\u6cd5\u5b9a\u4e49\u4e86\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684\u8f93\u51fa\u4fe1\u606f\uff0c\u91cd\u5199\u8be5\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8f93\u51fa\u6211\u4eec\u60f3\u8981\u7684\u4fe1\u606f\uff0c\u5bf9\u7c7b\u7684\u5b9e\u4f8b\u5316\u5bf9\u8c61\u6709\u66f4\u597d\u7684\u4e86\u89e3\u3002</li> <li><code>__call__</code> \u9b54\u6cd5\u65b9\u6cd5\u628a\u7c7b\u7684\u5b9e\u4f8b\u53d8\u6210\u53ef\u8c03\u7528\u7684\u5bf9\u8c61\uff1a<code>obj()</code>\uff0c\u76f8\u5f53\u4e8e <code>obj.__call__()</code>\u3002</li> <li>\u5728\u7c7b\u5b9e\u4f8b\u7684\u6bcf\u4e2a\u5c5e\u6027\u8fdb\u884c\u8d4b\u503c\u65f6\uff0c\u90fd\u4f1a\u9996\u5148\u8c03\u7528 <code>__setattr__()</code> \u65b9\u6cd5\uff0c\u5e76\u5728 <code>__setattr__()</code> \u65b9\u6cd5\u4e2d\u5c06\u5c5e\u6027\u540d\u548c\u5c5e\u6027\u503c\u6dfb\u52a0\u5230\u7c7b\u5b9e\u4f8b\u7684<code>__dict__</code> \u5c5e\u6027\u4e2d\u3002</li> <li><code>__getattr__(self,name)</code> \u5b9a\u4e49\u5f53\u7528\u6237\u83b7\u53d6\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u5c5e\u6027\u65f6\u7684\u884c\u4e3a\u3002</li> </ul> <p>minitorch.module.Module.train() -&gt; None</p> <p>\u5c06\u6b64\u6a21\u5757\u53ca\u5176\u6240\u6709\u5b50\u6a21\u5757\u7684\u6a21\u5f0f\u8bbe\u7f6e\u4e3a <code>train</code> \u6a21\u5f0f\u3002</p> <p>minitorch.module.Module.eval() -&gt; None</p> <p>\u5c06\u6b64\u6a21\u5757\u53ca\u5176\u6240\u6709\u5b50\u6a21\u5757\u7684\u6a21\u5f0f\u8bbe\u7f6e\u4e3a <code>eval</code> \u6a21\u5f0f\u3002</p> <p>minitorch.module.Module.named_parameters() -&gt; Sequence[Tuple[str, Parameter]]</p> <p>\u6536\u96c6\u6b64\u6a21\u5757\u53ca\u5176\u6240\u6709\u5b50\u6a21\u5757\u7684\u6240\u6709\u53c2\u6570\u3002</p> <p>\u8fd4\u56de\uff1a</p> <ul> <li><code>Sequence[Tuple[str, Parameter]]</code> - \u6bcf\u4e2a\u7956\u5148\u53c2\u6570\u7684\u540d\u79f0\u548c\u53c2\u6570\u3002</li> </ul> <p>minitorch.module.Module.parameters() -&gt; Sequence[Parameter]</p> <p>\u904d\u5386\u6b64\u6a21\u5757\u53ca\u5176\u6240\u6709\u5b50\u6a21\u5757\u7684\u6240\u6709\u53c2\u6570\u3002</p> <code>named_parameters()</code> \u548c <code>parameters()</code> \u7684\u533a\u522b <p><code>named_parameters()</code> \u548c <code>parameters()</code> \u662f PyTorch \u4e2d\u7684\u4e24\u4e2a\u51fd\u6570\uff0c\u5b83\u4eec\u90fd\u7528\u4e8e\u83b7\u53d6\u6a21\u578b\u4e2d\u7684\u53c2\u6570\uff0c\u4f46\u662f\u8fd4\u56de\u7684\u5185\u5bb9\u6709\u6240\u4e0d\u540c\u3002</p> <p><code>parameters()</code> \u662f\u4e00\u4e2a\u8fd4\u56de\u6a21\u578b\u6240\u6709\u53c2\u6570\u7684\u8fed\u4ee3\u5668\u3002\u5b83\u4f1a\u8fd4\u56de\u6a21\u578b\u4e2d\u6240\u6709\u7684\u53c2\u6570\uff0c\u4e0d\u5305\u62ec\u540d\u79f0\u3002\u8fd9\u5bf9\u4e8e\u904d\u5386\u6a21\u578b\u7684\u6240\u6709\u53c2\u6570\uff0c\u5982\u5728\u4f18\u5316\u5668\u4e2d\u66f4\u65b0\u53c2\u6570\u65f6\u975e\u5e38\u6709\u7528\u3002</p> <p>\u4f8b\u5982\uff1a</p> <pre><code>for param in model.parameters():\n    print(param)\n</code></pre> <p><code>named_parameters()</code> \u4e5f\u662f\u4e00\u4e2a\u8fd4\u56de\u6a21\u578b\u6240\u6709\u53c2\u6570\u7684\u8fed\u4ee3\u5668\uff0c\u4f46\u5b83\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5143\u7ec4\uff0c\u5143\u7ec4\u4e2d\u5305\u542b\u6bcf\u4e2a\u53c2\u6570\u7684\u540d\u79f0\u548c\u53c2\u6570\u672c\u8eab\u3002\u8fd9\u5bf9\u4e8e\u9700\u8981\u77e5\u9053\u53c2\u6570\u540d\u79f0\u7684\u60c5\u51b5\u975e\u5e38\u6709\u7528\uff0c\u4f8b\u5982\u5728\u6253\u5370\u7279\u5b9a\u53c2\u6570\u6216\u8005\u7406\u89e3\u6a21\u578b\u7684\u7ed3\u6784\u65f6\u3002</p> <p>\u4f8b\u5982\uff1a</p> <pre><code>for name, param in model.named_parameters():\n    print(name, param)\n</code></pre> <p>\u603b\u7684\u6765\u8bf4\uff0c<code>parameters()</code> \u548c <code>named_parameters()</code> \u7684\u533a\u522b\u5728\u4e8e\u662f\u5426\u8fd4\u56de\u53c2\u6570\u7684\u540d\u79f0\u3002</p> Example <pre><code>class Module:\n    \"\"\"\n    Modules form a tree that store parameters and other\n    submodules. They make up the basis of neural network stacks.\n\n    Attributes:\n        _modules : Storage of the child modules\n        _parameters : Storage of the module's parameters\n        training : Whether the module is in training mode or evaluation mode\n\n    \"\"\"\n\n    _modules: Dict[str, Module]\n    _parameters: Dict[str, Parameter]\n    training: bool\n\n    def __init__(self) -&gt; None:\n        self._modules = {}\n        self._parameters = {}\n        self.training = True\n\n    def modules(self) -&gt; Sequence[Module]:\n        \"Return the direct child modules of this module.\"\n        m: Dict[str, Module] = self.__dict__[\"_modules\"]\n        return list(m.values())\n\n    def train(self) -&gt; None:\n        \"Set the mode of this module and all descendent modules to `train`.\"\n        self.training = True\n        for child in self.modules():\n            child.train()\n\n    def eval(self) -&gt; None:\n        \"Set the mode of this module and all descendent modules to `eval`.\"\n        self.training = False\n        for child in self.modules():\n            child.eval()\n\n    def named_parameters(self) -&gt; Sequence[Tuple[str, Parameter]]:\n        \"\"\"\n        Collect all the parameters of this module and its descendents.\n\n\n        Returns:\n            The name and `Parameter` of each ancestor parameter.\n        \"\"\"\n        res = []\n\n        def recursive(name, node):\n            prefix = name + \".\" if name else \"\"\n            for k, v in node._parameters.items():\n                res.append((prefix + k, v))\n            for k, v in node._modules.items():\n                recursive(prefix + k, v)\n\n        recursive(\"\", self)\n        return res\n\n\n    def parameters(self) -&gt; Sequence[Parameter]:\n        \"Enumerate over all the parameters of this module and its descendents.\"\n        return [v for (_, v) in self.named_parameters()]\n\n    def add_parameter(self, k: str, v: Any) -&gt; Parameter:\n        \"\"\"\n        Manually add a parameter. Useful helper for scalar parameters.\n\n        Args:\n            k: Local name of the parameter.\n            v: Value for the parameter.\n\n        Returns:\n            Newly created parameter.\n        \"\"\"\n        val = Parameter(v, k)\n        self.__dict__[\"_parameters\"][k] = val\n        return val\n\n    def __setattr__(self, key: str, val: Parameter) -&gt; None:\n        if isinstance(val, Parameter):\n            self.__dict__[\"_parameters\"][key] = val\n        elif isinstance(val, Module):\n            self.__dict__[\"_modules\"][key] = val\n        else:\n            super().__setattr__(key, val)\n\n    def __getattr__(self, key: str) -&gt; Any:\n        if key in self.__dict__[\"_parameters\"]:\n            return self.__dict__[\"_parameters\"][key]\n\n        if key in self.__dict__[\"_modules\"]:\n            return self.__dict__[\"_modules\"][key]\n        return None\n\n    def __call__(self, *args: Any, **kwargs: Any) -&gt; Any:\n        return self.forward(*args, **kwargs)\n\n    def __repr__(self) -&gt; str:\n        def _addindent(s_: str, numSpaces: int) -&gt; str:\n            s2 = s_.split(\"\\n\")\n            if len(s2) == 1:\n                return s_\n            first = s2.pop(0)\n            s2 = [(numSpaces * \" \") + line for line in s2]\n            s = \"\\n\".join(s2)\n            s = first + \"\\n\" + s\n            return s\n\n        child_lines = []\n\n        for key, module in self._modules.items():\n            mod_str = repr(module)\n            mod_str = _addindent(mod_str, 2)\n            child_lines.append(\"(\" + key + \"): \" + mod_str)\n        lines = child_lines\n\n        main_str = self.__class__.__name__ + \"(\"\n        if lines:\n            # simple one-liner info, which most builtin Modules will use\n            main_str += \"\\n  \" + \"\\n  \".join(lines) + \"\\n\"\n\n        main_str += \")\"\n        return main_str\n\n\nclass Parameter:\n    \"\"\"\n    A Parameter is a special container stored in a :class:`Module`.\n\n    It is designed to hold a :class:`Variable`, but we allow it to hold\n    any value for testing.\n    \"\"\"\n\n    def __init__(self, x: Any, name: Optional[str] = None) -&gt; None:\n        self.value = x\n        self.name = name\n        if hasattr(x, \"requires_grad_\"):\n            self.value.requires_grad_(True)\n            if self.name:\n                self.value.name = self.name\n\n    def update(self, x: Any) -&gt; None:\n        \"Update the parameter value.\"\n        self.value = x\n        if hasattr(x, \"requires_grad_\"):\n            self.value.requires_grad_(True)\n            if self.name:\n                self.value.name = self.name\n\n    def __repr__(self) -&gt; str:\n        return repr(self.value)\n\n    def __str__(self) -&gt; str:\n        return str(self.value)\n</code></pre>"},{"location":"Tutorial/MiniTorch/Task0/#task05-visualization","title":"Task0.5 Visualization","text":"<p>\u5bf9\u4e8e\u524d\u51e0\u4e2a\u4f5c\u4e1a\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u5728 <code>minitorch/datasets.py</code> \u4e2d\u5b9e\u73b0\u7684\u4e00\u7ec4\u6570\u636e\u96c6\uff0c\u8fd9\u4e9b\u662f2D\u70b9\u5206\u7c7b\u6570\u636e\u96c6\u3002\uff08\u53ef\u4ee5\u53c2\u8003 TensorFlow Playground \u67e5\u770b\u7c7b\u4f3c\u7684\u4f8b\u5b50\u3002\uff09\u8fd9\u4e9b\u6570\u636e\u96c6\u90fd\u53ef\u4ee5\u6dfb\u52a0\u5230\u53ef\u89c6\u5316\u4e2d\u3002</p> <p>\u8981\u4f7f\u7528\u7cfb\u7edf\u8fdb\u884c\u5b9e\u9a8c\uff0c\u8bf7\u4f7f\u7528\uff1a</p> <pre><code>streamlit run app.py -- 0\n</code></pre> <p>\u9605\u8bfb <code>project/run_torch.py</code> \u4e2d\u7684\u4ee3\u7801\uff0c\u4f60\u53ef\u4ee5\u521d\u6b65\u4e86\u89e3\u5230\u4e00\u4e2a\u4f7f\u7528 Torch \u5bf9\u8fd9\u4e9b\u6570\u636e\u96c6\u8fdb\u884c\u6a21\u578b\u5b9e\u73b0\u7684\u4f8b\u5b50\u3002</p> <p>\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u53c2\u6570\u6765\u63d0\u4f9b\u4e00\u4e2a\u8bd5\u56fe\u6267\u884c\u5206\u7c7b\u4efb\u52a1\u7684\u6a21\u578b\u3002</p> <p>Info</p> <p>\u542f\u52a8\u4e00\u4e2a streamlit server \u5e76\u6253\u5370\u6570\u636e\u96c6\u7684\u56fe\u50cf\u3002\u624b\u52a8\u521b\u5efa\u5206\u7c7b\u5668\uff0c\u5c06\u7ebf\u6027\u6570\u636e\u96c6\u6309\u7167\u6b63\u786e\u7684\u989c\u8272\u8fdb\u884c\u5212\u5206\u3002</p> <p>\u5c06\u56fe\u50cf\u548c\u4f60\u4f7f\u7528\u7684\u53c2\u6570\u4e00\u8d77\u6dfb\u52a0\u5230\u4f60\u7684\u4ee3\u7801\u5e93\u4e2d\u7684 README \u6587\u4ef6\u91cc\u3002</p>"},{"location":"papers/culturellm/","title":"CultureLLM","text":"<p>Arxiv Link</p> <p>\u6458\u8981\uff1a</p> <p>\u636e\u62a5\u9053\uff0c\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u7531\u4e8e\u53d7\u5230\u82f1\u8bed\u8bed\u6599\u5e93\u8bad\u7ec3\u6570\u636e\u7684\u4e3b\u5bfc\uff0c\u53ef\u80fd\u504f\u5411\u4e8e\u67d0\u4e9b\u6587\u5316\u3002\u7531\u4e8e\u591a\u8bed\u79cd\u6587\u5316\u6570\u636e\u901a\u5e38\u6602\u8d35\u96be\u91c7\uff0c\u73b0\u6709\u7684\u5904\u7406\u65b9\u6cd5\u4e3b\u8981\u901a\u8fc7\u63d0\u793a\u5de5\u7a0b\u6216\u7279\u5b9a\u6587\u5316\u7684\u9884\u8bad\u7ec3\u6765\u5904\u7406\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u80fd\u5ffd\u89c6\u4e86\u4f4e\u8d44\u6e90\u6587\u5316\u7684\u77e5\u8bc6\u7f3a\u9677\uff0c\u5e76\u9700\u8981\u5927\u91cf\u7684\u8ba1\u7b97\u8d44\u6e90\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u63d0\u51fa\u4e86CultureLLM\uff0c\u4e00\u79cd\u5c06\u6587\u5316\u5dee\u5f02\u878d\u5165LLMs\u7684\u6210\u672c\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\u3002CultureLLM\u91c7\u7528\u4e16\u754c\u4ef7\u503c\u89c2\u8c03\u67e5\uff08WVS\uff09\u4f5c\u4e3a\u79cd\u5b50\u6570\u636e\uff0c\u5e76\u901a\u8fc7\u63d0\u51fa\u7684\u8bed\u4e49\u6570\u636e\u589e\u5f3a\u751f\u6210\u8bed\u4e49\u7b49\u4ef7\u7684\u8bad\u7ec3\u6570\u636e\u3002\u6211\u4eec\u4ec5\u4f7f\u7528\u6765\u81eaWVS\u768450\u4e2a\u79cd\u5b50\u6837\u672c\u548c\u589e\u5f3a\u6570\u636e\uff0c\u5bf99\u79cd\u8986\u76d6\u4e30\u5bcc\u548c\u4f4e\u8d44\u6e90\u8bed\u8a00\u7684\u6587\u5316\u7279\u5b9aLLMs\u8fdb\u884c\u5fae\u8c03\uff0c\u5e76\u4e3a\u8fd9\u4e9b\u6587\u5316\u521b\u5efa\u4e00\u4e2a\u7edf\u4e00\u7684\u6a21\u578b\uff08CultureLLM-One\uff09\u3002\u572860\u4e2a\u4e0e\u6587\u5316\u76f8\u5173\u7684\u6570\u636e\u96c6\u4e0a\u7684\u5927\u91cf\u5b9e\u9a8c\u8868\u660e\uff0cCultureLLM\u5728\u4e0eGPT-4\u76f8\u5f53\u6216\u8005\u66f4\u597d\u7684\u6027\u80fd\u4e0b\uff0c\u660e\u663e\u4f18\u4e8e\u8bf8\u5982GPT-3.5\uff08\u63d0\u9ad88.1%\uff09\u548cGemini Pro\uff08\u63d0\u9ad89.5%\uff09\u7b49\u5404\u79cd\u5bf9\u624b\u3002\u6211\u4eec\u7684\u4eba\u7c7b\u7814\u7a76\u8868\u660e\uff0c\u751f\u6210\u7684\u6837\u672c\u5728\u8bed\u4e49\u4e0a\u7b49\u540c\u4e8e\u539f\u59cb\u6837\u672c\uff0c\u4e3aLLMs\u63d0\u4f9b\u4e86\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\u3002</p> <p>\u4e0b\u9762\u662fCultureLLM\u7684\u67b6\u6784\u56fe\uff1a</p> <p>\u4e0b\u9762\u662f\u8bed\u4e49\u6570\u636e\u589e\u5f3a\u7684\u7ec6\u8282\uff0c\u9996\u5148\uff0c\u901a\u8fc7\u6539\u8ff0\u3001\u8bed\u4e49\u8fc7\u6ee4\u548c\u53e5\u5b50\u89e3\u6790\u751f\u6210\u8bed\u4e49\u6a21\u677f\uff0c\u7136\u540e\uff0c\u901a\u8fc7\u4e0a\u4e0b\u6587\u654f\u611f\u7684\u540c\u4e49\u8bcd\u66ff\u6362\u548c\u8bed\u4e49\u8fc7\u6ee4\u751f\u6210\u8bad\u7ec3\u6837\u672c\uff1a</p>"},{"location":"papers/gptdroid/","title":"Make LLM a Testing Expert","text":"<p>Make LLM a Testing Expert: Bringing Human-like Interaction to Mobile GUI Testing via Functionality-aware Decisions</p> <p>Arxiv Link</p> <p>Accepted by ICSE24</p> <p>\u6458\u8981\uff1a</p> <p>\u81ea\u52a8\u5316\u56fe\u5f62\u7528\u6237\u754c\u9762\uff08GUI\uff09\u6d4b\u8bd5\u5728\u786e\u4fdd\u5e94\u7528\u8d28\u91cf\u65b9\u9762\u53d1\u6325\u7740\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528\uff0c\u5c24\u5176\u662f\u5728\u79fb\u52a8\u5e94\u7528\u5df2\u7ecf\u6210\u4e3a\u6211\u4eec\u65e5\u5e38\u751f\u6d3b\u4e2d\u4e0d\u53ef\u6216\u7f3a\u7684\u90e8\u5206\u7684\u4eca\u5929\u3002\u5c3d\u7ba1\u5b66\u4e60\u578b\u6280\u672f\u5728\u81ea\u52a8\u5316GUI\u6d4b\u8bd5\u4e2d\u7684\u4f7f\u7528\u65e5\u76ca\u666e\u53ca\uff0c\u56e0\u5176\u80fd\u591f\u751f\u6210\u7c7b\u4f3c\u4eba\u7684\u4ea4\u4e92\uff0c\u4f46\u5b83\u4eec\u4ecd\u7136\u5b58\u5728\u51e0\u4e2a\u9650\u5236\uff0c\u4f8b\u5982\u6d4b\u8bd5\u8986\u76d6\u7387\u4f4e\uff0c\u6cdb\u5316\u80fd\u529b\u4e0d\u8db3\uff0c\u4ee5\u53ca\u8fc7\u5ea6\u4f9d\u8d56\u8bad\u7ec3\u6570\u636e\u3002\u53d7\u5230\u50cfChatGPT\u8fd9\u6837\u7684\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u5728\u81ea\u7136\u8bed\u8a00\u7406\u89e3\u548c\u95ee\u9898\u56de\u7b54\u65b9\u9762\u7684\u6210\u529f\u542f\u53d1\uff0c\u6211\u4eec\u5c06\u79fb\u52a8GUI\u6d4b\u8bd5\u95ee\u9898\u5f62\u5f0f\u5316\u4e3a\u4e00\u4e2aQ&amp;A\u4efb\u52a1\u3002\u6211\u4eec\u63d0\u51fa\u4e86GPTDroid\uff0c\u8ba9LLM\u901a\u8fc7\u4f20\u9012GUI\u9875\u9762\u4fe1\u606f\u4e0e\u79fb\u52a8\u5e94\u7528\u8fdb\u884c\u5bf9\u8bdd\uff0c\u4ee5\u5f15\u53d1\u6d4b\u8bd5\u811a\u672c\uff0c\u5e76\u6267\u884c\u5b83\u4eec\u4ee5\u7ee7\u7eed\u5411LLM\u4f20\u9012\u5e94\u7528\u53cd\u9988\uff0c\u8fed\u4ee3\u6574\u4e2a\u8fc7\u7a0b\u3002\u5728\u8fd9\u4e2a\u6846\u67b6\u5185\uff0c\u6211\u4eec\u8fd8\u5f15\u5165\u4e86\u4e00\u4e2a\u529f\u80fd\u611f\u77e5\u7684\u8bb0\u5fc6\u63d0\u793a\u673a\u5236\uff0c\u4f7fLLM\u5177\u6709\u4fdd\u7559\u6574\u4e2a\u8fc7\u7a0b\u7684\u6d4b\u8bd5\u77e5\u8bc6\uff0c\u5e76\u8fdb\u884c\u957f\u671f\u7684\uff0c\u57fa\u4e8e\u529f\u80fd\u7684\u63a8\u7406\u4ee5\u6307\u5bfc\u63a2\u7d22\u7684\u80fd\u529b\u3002\u6211\u4eec\u5728\u6765\u81eaGoogle Play\u768493\u4e2a\u5e94\u7528\u4e0a\u5bf9\u5176\u8fdb\u884c\u4e86\u8bc4\u4f30\uff0c\u5e76\u8bc1\u660e\u5176\u5728\u6d3b\u52a8\u8986\u76d6\u7387\u65b9\u9762\u6bd4\u6700\u597d\u7684\u57fa\u7ebf\u9ad8\u51fa32%\uff0c\u5e76\u4ee5\u66f4\u5feb\u7684\u901f\u5ea6\u53d1\u73b0\u4e8631%\u66f4\u591a\u7684\u9519\u8bef\u3002\u6b64\u5916\uff0cGPTDroid\u5728Google Play\u4e0a\u53d1\u73b0\u4e8653\u4e2a\u65b0\u7684\u9519\u8bef\uff0c\u5176\u4e2d35\u4e2a\u5df2\u7ecf\u88ab\u786e\u8ba4\u5e76\u4fee\u590d\u3002</p> <p>\u4e0b\u9762\u662fGPTDroid\u7684\u67b6\u6784\u56fe\uff1a</p> <p>\u4e0b\u56fe\u7ed9\u51fa\u4e86\u4e00\u4e2aGPTDroid\u7684\u5de5\u4f5c\u793a\u4f8b\uff1a</p> <p>\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u793a\u4f8b\u804a\u5929\u8bb0\u5f55\u3002LLM\u53ef\u4ee5\u7406\u89e3\u5e94\u7528\u7684GUI\uff0c\u5e76\u63d0\u4f9b\u8be6\u7ec6\u7684\u64cd\u4f5c\u6765\u5bfc\u822a\u5e94\u7528\uff08\u4f8b\u5982\uff0c\u56fe\u4e2d\u7684A1-A5\uff09\u3002\u4e3a\u4e86\u5f25\u8865\u5176\u9519\u8bef\u7684\u9884\u6d4b\uff08\u56fe\u4e2d\u7684A2\uff09\uff0cGPTDroid\u901a\u8fc7\u5b9e\u65f6\u53cd\u9988\u5f15\u5bfc\u5b83\u91cd\u65b0\u751f\u6210\u8f93\u5165\uff0c\u76f4\u5230\u89e6\u53d1\u6709\u6548\u7684\u9875\u9762\u8f6c\u6362\u3002\u5373\u4f7f\u5728\u957f\u65f6\u95f4\u7684\u6d4b\u8bd5\u8ffd\u8e2a\u4e4b\u540e\uff0c\u5b83\u4ecd\u7136\u4fdd\u6301\u6e05\u6670\u7684\u6d4b\u8bd5\u903b\u8f91\uff0c\u4ee5\u8fdb\u884c\u590d\u6742\u7684\u64cd\u4f5c\u63a8\u7406\uff08\u56fe\u4e2d\u7684A3\uff0cA4\uff09\uff0c\u5e76\u4e14\u5b83\u53ef\u4ee5\u4f18\u5148\u6d4b\u8bd5\u91cd\u8981\u7684\u529f\u80fd\uff08\u4f8b\u5982\uff0c\u56fe\u4e2d\u7684A5\uff09\u3002</p>"},{"location":"papers/limits/","title":"Testing the limits","text":"<p>Testing the limits: Unusual text inputs generation for mobile app crash detection with large language model</p> <p>Arxiv Link</p> <p>Accepted by ICSE24</p> <p>\u6458\u8981\uff1a</p> <p>\u79fb\u52a8\u5e94\u7528\u5df2\u7ecf\u6210\u4e3a\u6211\u4eec\u65e5\u5e38\u751f\u6d3b\u4e2d\u65e0\u5904\u4e0d\u5728\u7684\u4e00\u90e8\u5206\uff0c\u4e3a\u7528\u6237\u63d0\u4f9b\u5404\u79cd\u670d\u52a1\u548c\u5b9e\u7528\u5de5\u5177\u7684\u8bbf\u95ee\u3002\u6587\u672c\u8f93\u5165\u4f5c\u4e3a\u7528\u6237\u548c\u5e94\u7528\u4e4b\u95f4\u7684\u91cd\u8981\u4ea4\u4e92\u901a\u9053\uff0c\u5728\u641c\u7d22\u67e5\u8be2\u3001\u8eab\u4efd\u9a8c\u8bc1\u3001\u6d88\u606f\u4f20\u9012\u7b49\u6838\u5fc3\u529f\u80fd\u4e2d\u8d77\u7740\u91cd\u8981\u7684\u4f5c\u7528\u3002\u7136\u800c\uff0c\u67d0\u4e9b\u7279\u6b8a\u7684\u6587\u672c\uff08\u4f8b\u5982\uff0c\u5b57\u4f53\u5927\u5c0f\u4e3a-18\uff09\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5e94\u7528\u5d29\u6e83\uff0c\u56e0\u6b64\uff0c\u751f\u6210\u591a\u6837\u5316\u7684\u5f02\u5e38\u8f93\u5165\u4ee5\u5168\u9762\u6d4b\u8bd5\u5e94\u7528\u662f\u975e\u5e38\u9700\u8981\u7684\u3002\u7136\u800c\uff0c\u7531\u4e8e\u7206\u70b8\u6027\u7ec4\u5408\u56f0\u5883\u3001\u9ad8\u5ea6\u7684\u4e0a\u4e0b\u6587\u654f\u611f\u6027\u548c\u590d\u6742\u7684\u7ea6\u675f\u5173\u7cfb\uff0c\u8fd9\u4e5f\u662f\u4e00\u9879\u6311\u6218\u3002\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u540d\u4e3aInputBlaster\u7684\u65b9\u6cd5\uff0c\u5229\u7528LLM\u81ea\u52a8\u751f\u6210\u5f02\u5e38\u6587\u672c\u8f93\u5165\u4ee5\u68c0\u6d4b\u79fb\u52a8\u5e94\u7528\u7684\u5d29\u6e83\u3002\u5b83\u5c06\u5f02\u5e38\u8f93\u5165\u751f\u6210\u95ee\u9898\u89c6\u4e3a\u4e00\u4e2a\u4efb\u52a1\uff0c\u8be5\u4efb\u52a1\u7684\u76ee\u6807\u662f\u4ea7\u751f\u4e00\u7ec4\u6d4b\u8bd5\u751f\u6210\u5668\uff0c\u6bcf\u4e2a\u751f\u6210\u5668\u53ef\u4ee5\u5728\u76f8\u540c\u7684\u53d8\u5f02\u89c4\u5219\u4e0b\u4ea7\u751f\u4e00\u6279\u5f02\u5e38\u6587\u672c\u8f93\u5165\u3002\u5177\u4f53\u6765\u8bf4\uff0cInputBlaster\u5229\u7528LLM\u4ea7\u751f\u6d4b\u8bd5\u751f\u6210\u5668\uff0c\u540c\u65f6\u5c06\u53d8\u5f02\u89c4\u5219\u4f5c\u4e3a\u63a8\u7406\u94fe\uff0c\u5e76\u5229\u7528\u4e0a\u4e0b\u6587\u5b66\u4e60\u6a21\u5f0f\u5411LLM\u5c55\u793a\u4f8b\u5b50\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002InputBlaster\u5728\u6d89\u53ca31\u4e2a\u6d41\u884cAndroid\u5e94\u7528\u768436\u4e2a\u6587\u672c\u8f93\u5165\u63a7\u4ef6\u4e0a\u8fdb\u884c\u4e86\u8bc4\u4f30\uff0c\u7ed3\u679c\u663e\u793a\uff0c\u5b83\u5b9e\u73b0\u4e8678%\u7684\u9519\u8bef\u68c0\u6d4b\u7387\uff0c\u6bd4\u6700\u597d\u7684\u57fa\u7ebf\u9ad8\u51fa136%\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5c06\u5176\u4e0e\u81ea\u52a8GUI\u6d4b\u8bd5\u5de5\u5177\u96c6\u6210\uff0c\u5e76\u5728Google Play\u7684\u771f\u5b9e\u4e16\u754c\u5e94\u7528\u4e2d\u68c0\u6d4b\u5230\u4e8637\u4e2a\u672a\u89c1\u8fc7\u7684\u5d29\u6e83\u3002</p> <p>\u4e0b\u9762\u662fAndroid App Bugs\u7684\u4f8b\u5b50\uff1a</p> <p>\u8fd9\u4e9bBug\u5176\u5b9e\u548c\u590d\u6742\u7684\u7ea6\u675f\u5173\u7cfb\u76f8\u5173\uff0c\u6211\u4eec\u603b\u7ed3\u4e86\u5404\u79cd\u7ea6\u675f\u5173\u7cfb\u7684\u7c7b\u522b\uff0c\u5305\u62ec\u7ec4\u4ef6\u5185\u90e8\u3001\u7ec4\u4ef6\u4e4b\u95f4\u7684\u591a\u79cd\u7ea6\u675f\uff1a</p> <p>\u4e0b\u9762\u662fInputBlaster\u7684\u67b6\u6784\u56fe\uff1a</p> <p>\u4e0b\u9762\u6f14\u793a\u4e86InputBlaster\u7684\u5de5\u4f5c\u793a\u4f8b\uff1a</p> <p>\u4e0b\u9762\u662fInputBlaster\u7684\u4e00\u4e2a\u8f93\u51fa\u4f8b\u5b50\uff1a</p>"}]}